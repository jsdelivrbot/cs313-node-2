{"version":3,"sources":["views/static/Header.js","views/static/Footer.js","views/public/Home.js","views/public/About.js","views/public/Login.js","views/public/Signup.js","services/Globals.js","views/private/Party.js","views/private/Parties.js","views/private/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","NavLink","to","activeClassName","accountInfo","accountLoggedIn","onClick","logout","Footer","Link","Home","id","About","Login","Signup","Globals","headers","Content-Type","Accept","arr1","arr2","concat","length","arguments","undefined","possibleCharacters","i","charAt","Math","floor","random","input","e","document","innerHTML","childNodes","nodeValue","elt","textContent","data","method","body","JSON","stringify","controller","action","payload","console","log","query","success","fetch","this","url","then","res","json","status","Party","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","state","dispatches","dispatchtext","_this2","match","params","partyid","setState","accountid","accountname","dispatchcreated","Date","partyId","req","createRequestBody","partid","target","value","_this3","map","dispatch","index","Party_Dispatch","key","type","createDispatch","React","Component","Dispatch","display","date","toDateString","Parties","newParty","createParty","handlePartyName","toggleNewParty","partyName","accountId","updateParties","prevState","parties","party","partyname","Route","path","render","private_Party","assign","Dashboard","Switch","private_Parties","Settings_default","isAdmin","Admin_default","Redirect","App","accountLevel","BrowserRouter","static_Header","exact","component","private_Dashboard","static_Footer","Boolean","window","location","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b07be41.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\"></div>\r\n      <nav className=\"nav\">\r\n        <ul className=\"nav__list\">\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\">Home</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/about\" activeClassName=\"active\" className=\"nav__link\">About</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            { props.accountInfo.accountLoggedIn\r\n              ? <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\" onClick={props.logout}>Logout</NavLink>\r\n              : <NavLink to=\"/login\" activeClassName=\"active\" className=\"nav__link\">Login</NavLink>}\r\n          </li>\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/parties\" activeClassName=\"active\" className=\"nav__link\">Parties</NavLink></li>\r\n            : ''\r\n          }\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/settings\" activeClassName=\"active\" className=\"nav__link\">Settings</NavLink></li>\r\n            : ''\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-section\">\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div id=\"home\">\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div id=\"About\">\r\n      <h1>About</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About; ","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div id=\"login\">\r\n      <h1>Login</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div id=\"signup\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;","//================================\r\n// Globals Class\r\n//================================\r\n\r\nclass Globals {\r\n\r\n  headers= {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  };\r\n\r\n  static createRandomKey(length = 7) {\r\n    let id = \"\";\r\n    let possibleCharacters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < length; i++) {\r\n      id += possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\r\n    }\r\n\r\n    return id;\r\n  }\r\n\r\n  static htmlDecode(input){\r\n    var e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n\r\n  static htmlEncode(input) {\r\n    let elt = document.createElement('span'); \r\n    elt.textContent = input; \r\n    return elt.innerHTML;\r\n  }\r\n\r\n  static createRequest(data) {\r\n\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  static createBody(controller, action, payload) {\r\n    let body = {\r\n      controller: controller,\r\n      action: action,\r\n      payload: payload,\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  static createRequestBody(body) {\r\n    console.log(body);\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  concatArray(arr1, arr2) {\r\n    return arr1.concat(arr2);\r\n  }\r\n\r\n  static getRequest(query, success) {\r\n    fetch(`${this.url}${query}`)\r\n    .then(res => res.json)\r\n    .then(res => {\r\n      console.log(res.status);\r\n      if(res.status === 'success') {\r\n        success(res.data);\r\n      } else {\r\n        // failure(res.message);\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//Export Statement\r\nexport default Globals;","import React from 'react';\r\nimport Globals from '../../services/Globals';\r\n\r\nclass Party extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.state = {\r\n      dispatches: [],\r\n      dispatchtext: '',\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(`/dispatchesByParty/${this.props.match.params.partyid}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({\r\n        dispatches: res.data,\r\n      })\r\n    })\r\n    // console.log(\"mounted party\")\r\n    this.setState({\r\n      dispatches: [\r\n        {dispatchtext: \"hello how are you today?\", accountid: 2, accountname: \"Jol\", dispatchcreated: new Date()},\r\n        {dispatchtext: \"I am doing well how are you?\", accountid: 1, accountname: \"Matt\", dispatchcreated: new Date()},\r\n        {dispatchtext: \"It was a bit snowy today.\", accountid: 2, accountname: \"Jol\", dispatchcreated: new Date()},\r\n        {dispatchtext: \"I enjoyed going to the movies last night.\", accountid: 1, accountname: \"Matt\", dispatchcreated: new Date()},\r\n      ],\r\n    });\r\n  }\r\n\r\n  deleteParty() {\r\n    let body = {\r\n      partyId: this.props.match.params.partyid,\r\n    }\r\n    let req = Globals.createRequestBody(body);\r\n    fetch('/deleteParty', req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n  }\r\n\r\n  createDispatch() {\r\n    let data = {\r\n      accountid: this.props.accountInfo.accountid,\r\n      partid: this.props.match.params.partyid,\r\n      dispatchtext: this.state.dispatchtext\r\n    }\r\n    let req = Globals.createRequestBody(data);\r\n    fetch('/createDispatch', req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      dispatchtext: e.target.value,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <article className=\"col--8 col--mdm--9 col--lrg--10 bg-theme-blue\">\r\n        <div className=\"dispatch__container\">\r\n          { this.state.dispatches.map((dispatch, index) => {\r\n            return(<Dispatch dispatch={dispatch} key={index} accountInfo={this.props.accountInfo} />)\r\n          })}\r\n          <form>\r\n            <fieldset className=\"field btn-pair\">\r\n              <div className=\"field--btn-pair\">\r\n                <input type=\"text\" className=\"input full btn-pair\" onChange={this.onChange}/>\r\n                <button className=\"btn--input\" onClick={this.createDispatch}>Send</button>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Party;\r\n\r\nconst Dispatch = (props) => {\r\n  let display = \"dispatch\";\r\n  let date = new Date(props.dispatch.dispatchcreated);\r\n  if(props.dispatch.accountid === props.accountInfo.accountid) {\r\n    display = \"dispatch self\";\r\n  }\r\n  return (\r\n    <div className={display}>\r\n      <p className=\"dispatch__account\">{props.dispatch.accountname} <span className=\"dispatch__time\">{date.toDateString()}</span></p>\r\n      <p className=\"dispatch__message\">{props.dispatch.dispatchtext}</p>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {NavLink, Route} from 'react-router-dom';\r\nimport Party from './Party';\r\nimport Globals from '../../services/Globals';\r\n\r\nclass Parties extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newParty = this.newParty.bind(this);\r\n    this.createParty = this.createParty.bind(this);\r\n    this.handlePartyName = this.handlePartyName.bind(this);\r\n    this.state ={\r\n      toggleNewParty: false,\r\n      partyName: '',\r\n    }\r\n  }\r\n  createParty() {\r\n    let body = {\r\n      partyName: this.state.partyName,\r\n      accountId: this.props.accountInfo.accountid,\r\n    }\r\n    let req = Globals.createRequestBody(body);\r\n    fetch('/createParty', req)\r\n    .then(res => res.json())\r\n    .then(res =>{\r\n      this.props.updateParties(res.data);\r\n      console.log(res);\r\n    });\r\n  }\r\n  newParty() {\r\n    this.setState((prevState) => ({\r\n      toggleNewParty: !prevState.toggleNewParty,\r\n    }));\r\n  }\r\n  handlePartyName(e) {\r\n    this.setState({\r\n      partyName: e.target.value,\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <div className=\"grid page__full--header\">\r\n        <ul className=\"party__list col--lrg--2 col--mdm--3 col--4 bg-theme-black\">\r\n          {this.props.parties.map( (party, index) => {\r\n            return (\r\n              <li className=\"party__item\" key={index}>\r\n                <NavLink activeClassName=\"party__link active\" to={`/dashboard/parties/${party.partyid}`} className=\"party__link \">{party.partyname}</NavLink></li>\r\n            );\r\n          })}\r\n          <li className=\"party__item--btn-pair\">\r\n              <fieldset className=\"field\">\r\n                <div className=\"field--btn-pair\">\r\n                  <input type=\"text\" className=\"input sml\" onChange={this.handlePartyName}/>\r\n                  <label className=\"btn icon btn-pair tiny\" onClick={this.createParty}>New</label>\r\n                </div>\r\n              </fieldset>\r\n          </li>\r\n        </ul>\r\n        <Route path=\"/dashboard/parties/:partyid\" render={(props) => <Party accountInfo={this.props.accountInfo} {...props} />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Parties;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport Parties from './Parties';\r\nimport Settings from './Settings';\r\nimport Admin from './Admin';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.updateParties = this.updateParties.bind(this);\r\n    this.state = {\r\n      parties: []\r\n    };\r\n  } \r\n  componentDidMount() {\r\n    fetch(`/partiesByAccount/${this.props.accountInfo.accountid}`)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n      this.setState({parties: res.data});\r\n    });\r\n    // this.setState({\r\n    //   parties: [\r\n    //     {partyid: 1, partyname: \"joll's party\", partycreated: new Date(), accountId: 5},\r\n    //     {partyid: 2, partyname: \"matt's party\", partycreated: new Date(), accountId: 4},\r\n    //     {partyid: 3, partyname: \"amy's party\", partycreated: new Date(), accountid: 1},\r\n    //     {partyid: 4, partyname: \"rachel's party\", partycreated: new Date(), accountId: 3},\r\n    //   ]\r\n    // });\r\n  }\r\n\r\n  updateParties(parties) {\r\n    this.setState({\r\n      parties: parties,\r\n    });\r\n  }\r\n  render () {\r\n    return (\r\n      <div id=\"Dashbaord\">\r\n        <Switch>\r\n          <Route path=\"/dashboard/parties\" render={(props) => <Parties accountInfo={this.props.accountInfo} parties={this.state.parties} updateParties={this.updateParties} {...props} />} />\r\n          <Route path=\"/dashboard/settings\" render={(props) => <Settings {...props} />} />\r\n          <Route path=\"/dashboard/admin\" render={(props) => \r\n            this.state.isAdmin\r\n            ? <Admin {...props} />\r\n            : <Redirect to=\"/login\" />\r\n           }/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Header from './views/static/Header';\nimport Footer from './views/static/Footer';\nimport Home from './views/public/Home';\nimport About from './views/public/About';\nimport Login from './views/public/Login';\nimport Signup from './views/public/Signup';\nimport Dashboard from './views/private/Dashboard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountInfo: {\n        accountLoggedIn: true,\n        accountLevel: 'user',\n        accountid: 1,\n      }\n    }\n  }\n\n  logout () {\n    return console.log(\"blue\");\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header accountInfo={this.state.accountInfo} logout={this.logout}/>\n          <Switch>\n            <Route path=\"/\" exact={true}  component={Home} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/singup\" component={Signup} />\n            <Route path=\"/dashboard\" render={(props) => <Dashboard accountInfo={this.state.accountInfo} {...props}/>} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}