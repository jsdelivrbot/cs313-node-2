{"version":3,"sources":["views/static/Header.js","views/static/Footer.js","views/public/Home.js","views/public/About.js","views/public/Login.js","views/public/Signup.js","views/private/Parties.js","views/private/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","NavLink","to","activeClassName","accountInfo","accountLoggedIn","onClick","logout","Footer","Link","Home","id","About","Login","Signup","Parties","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","parties","_this2","fetch","concat","accountId","then","res","json","thnen","setState","data","map","party","partyName","React","Component","Dashboard","Switch","Route","path","render","private_Parties","Dispatch_default","Settings_default","isAdmin","Admin_default","Redirect","App","accountLevel","console","log","BrowserRouter","static_Header","component","private_Dashboard","static_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.93e279a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo\"></div>\r\n      <nav className=\"nav\">\r\n        <ul className=\"nav__list\">\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\">Home</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            <NavLink to=\"/about\" activeClassName=\"active\" className=\"nav__link\">About</NavLink>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            { props.accountInfo.accountLoggedIn\r\n              ? <NavLink to=\"/home\" activeClassName=\"active\" className=\"nav__link\" onClick={props.logout}>Logout</NavLink>\r\n              : <NavLink to=\"/login\" activeClassName=\"active\" className=\"nav__link\">Login</NavLink>}\r\n          </li>\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/parties\" activeClassName=\"active\" className=\"nav__link\">Parties</NavLink></li>\r\n            : ''\r\n          }\r\n          { props.accountInfo.accountLoggedIn\r\n            ? <li className=\"nav__item\"><NavLink to=\"/dashboard/settings\" activeClassName=\"active\" className=\"nav__link\">Settings</NavLink></li>\r\n            : ''\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n  return(\r\n    <footer className=\"footer\">\r\n      <div className=\"footer-section\">\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"footer-group\">\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n          <li className=\"footer-group__item\">\r\n            <Link to=\"/about\" className=\"footer-group__link\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <div id=\"home\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (\r\n    <div id=\"About\">\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About; ","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <div id=\"login\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div id=\"signup\">\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nclass Parties extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      parties: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch(`/partiesByAccount/${this.props.accountInfo.accountId}`)\r\n    .then(res => res.json())\r\n    .thnen(res => {\r\n      this.setState({\r\n        parties: res.data,\r\n      })\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.state.parties.map( party => {\r\n            return (\r\n              <li>{party.partyName}</li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Parties;","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\n\r\nimport Parties from './Parties';\r\nimport Dispatch from './Dispatch';\r\nimport Settings from './Settings';\r\nimport Admin from './Admin';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {};\r\n  } \r\n  render () {\r\n    return (\r\n      <div id=\"Dashbaord\">\r\n        <Switch>\r\n          <Route path=\"/parties\" render={(props) => <Parties {...props} />} />\r\n          <Route path=\"/dispatch\" render={(props) => <Dispatch {...props} />} />\r\n          <Route path=\"/settings\" render={(props) => <Settings {...props} />} />\r\n          <Route path=\"/admin\" render={(props) => \r\n            this.state.isAdmin\r\n            ? <Admin {...props} />\r\n            : <Redirect to=\"/login\" />\r\n           }/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Header from './views/static/Header';\nimport Footer from './views/static/Footer';\nimport Home from './views/public/Home';\nimport About from './views/public/About';\nimport Login from './views/public/Login';\nimport Signup from './views/public/Signup';\nimport Dashboard from './views/private/Dashboard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountInfo: {\n        accountLoggedIn: true,\n        accountLevel: 'admin'\n      }\n    }\n  }\n\n  logout () {\n    return console.log(\"blue\");\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header accountInfo={this.state.accountInfo} logout={this.logout}/>\n          <Switch>\n            <Route path=\"/\" component={Home} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/singup\" component={Signup} />\n            <Route path=\"\" render={(props) => <Dashboard {...props}/>} />\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}